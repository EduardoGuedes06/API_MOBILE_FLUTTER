name: Compilar e implantar o aplicativo .NET Core no Aplicativo Web ipetapi com o Serviço de Gerenciamento de API IpetAPIapi – IpetAPI

on:
  push:
    branches:
    - main

env:
  AZURE_WEBAPP_NAME: ipetapi
  AZURE_WEBAPP_PACKAGE_PATH: src\Ipet.API\publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: ipetapi_group
  AZURE_APIM_SERVICENAME: IpetAPIapi
  AZURE_APIM_API_ID: IpetAPI
  AZURE_APIM_APPSERVICEURL: https://ipetapi.azurewebsites.net
  SWASHBUCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 5.6.3
  SWASHBUCKLE_DOTNET_CORE_VERSION: 3.1.x
  API_IMPORT_DLL: src\Ipet.API\bin\Release\net6.0\Ipet.API.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: src\Ipet.API

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Setup SwashBuckle .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}

    - name: Restore
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}

    - name: Build
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build

    - name: Publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Install Swashbuckle CLI .NET Global Tool
      run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Install Azure CLI
      run: |
        Invoke-WebRequest -Uri https://aka.ms/installazurecli -OutFile install.ps1; .\install.ps1

    - name: Azure Login
      run: az login --service-principal -u ${{ secrets.IpetAPIapi_SPN_CLIENT_ID }} -p ${{ secrets.IpetAPIapi_SPN_CLIENT_SECRET }} --tenant ${{ secrets.IpetAPIapi_SPN_TENANT_ID }}

    - name: Deploy to Azure WebApp
      run: az webapp deploy --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_APIM_RESOURCEGROUP }} --src-path ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} --type zip

    - name: Import API into Azure API Management
      run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" --service-name "${{ env.AZURE_APIM_SERVICENAME }}" --api-id "${{ env.AZURE_APIM_API_ID }}" --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" --specification-format OpenApi --subscription-required false

    - name: Logout
      run: az logout
